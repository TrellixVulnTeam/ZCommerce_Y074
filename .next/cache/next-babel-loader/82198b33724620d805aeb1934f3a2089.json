{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar baseUrl = process.env.BASE_URL;\nexport var getData = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(url, token) {\n    var res, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch(\"\".concat(baseUrl, \"/api/\").concat(url), {\n              method: 'GET',\n              headers: {\n                'Content-Type': 'application/json',\n                'Authorization': token\n              }\n            });\n\n          case 2:\n            res = _context.sent;\n            _context.next = 5;\n            return res.json();\n\n          case 5:\n            data = _context.sent;\n            return _context.abrupt(\"return\", data);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getData(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var postData = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(url, post, token) {\n    var res, data;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return fetch(\"\".concat(baseUrl, \"/api/\").concat(url), {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json',\n                'Authorization': token\n              },\n              body: JSON.stringify(post)\n            });\n\n          case 2:\n            res = _context2.sent;\n            _context2.next = 5;\n            return res.json();\n\n          case 5:\n            data = _context2.sent;\n            return _context2.abrupt(\"return\", data);\n\n          case 7:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function postData(_x3, _x4, _x5) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var patchData = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(url, post, token) {\n    var res, data;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return fetch(\"\".concat(baseUrl, \"/api/\").concat(url), {\n              method: 'PATCH',\n              headers: {\n                'Content-Type': 'application/json',\n                'Authorization': token\n              },\n              body: JSON.stringify(post)\n            });\n\n          case 2:\n            res = _context3.sent;\n            _context3.next = 5;\n            return res.json();\n\n          case 5:\n            data = _context3.sent;\n            return _context3.abrupt(\"return\", data);\n\n          case 7:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function patchData(_x6, _x7, _x8) {\n    return _ref3.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["/home/zuares/Documents/Project/ZCommerce/utils/fetchData.js"],"names":["baseUrl","process","env","BASE_URL","getData","url","token","fetch","method","headers","res","json","data","postData","post","body","JSON","stringify","patchData"],"mappings":";;AACA,IAAMA,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAA5B;AAEA,OAAO,IAAMC,OAAO;AAAA,sEAAG,iBAAOC,GAAP,EAAYC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACDC,KAAK,WAAIP,OAAJ,kBAAmBK,GAAnB,GAA0B;AAC7CG,cAAAA,MAAM,EAAE,KADqC;AAE7CC,cAAAA,OAAO,EAAE;AACL,gCAAgB,kBADX;AAEL,iCAAiBH;AAFZ;AAFoC,aAA1B,CADJ;;AAAA;AACbI,YAAAA,GADa;AAAA;AAAA,mBAQAA,GAAG,CAACC,IAAJ,EARA;;AAAA;AAQbC,YAAAA,IARa;AAAA,6CASZA,IATY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAPR,OAAO;AAAA;AAAA;AAAA,GAAb;AAYP,OAAO,IAAMS,QAAQ;AAAA,uEAAG,kBAAOR,GAAP,EAAYS,IAAZ,EAAkBR,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACFC,KAAK,WAAIP,OAAJ,kBAAmBK,GAAnB,GAA0B;AAC7CG,cAAAA,MAAM,EAAE,MADqC;AAE7CC,cAAAA,OAAO,EAAE;AACL,gCAAgB,kBADX;AAEL,iCAAiBH;AAFZ,eAFoC;AAM7CS,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeH,IAAf;AANuC,aAA1B,CADH;;AAAA;AACdJ,YAAAA,GADc;AAAA;AAAA,mBASDA,GAAG,CAACC,IAAJ,EATC;;AAAA;AASdC,YAAAA,IATc;AAAA,8CAUbA,IAVa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAARC,QAAQ;AAAA;AAAA;AAAA,GAAd;AAaP,OAAO,IAAMK,SAAS;AAAA,uEAAG,kBAAOb,GAAP,EAAYS,IAAZ,EAAkBR,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACHC,KAAK,WAAIP,OAAJ,kBAAmBK,GAAnB,GAA0B;AAC7CG,cAAAA,MAAM,EAAE,OADqC;AAE7CC,cAAAA,OAAO,EAAE;AACL,gCAAgB,kBADX;AAEL,iCAAiBH;AAFZ,eAFoC;AAM7CS,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeH,IAAf;AANuC,aAA1B,CADF;;AAAA;AACfJ,YAAAA,GADe;AAAA;AAAA,mBASFA,GAAG,CAACC,IAAJ,EATE;;AAAA;AASfC,YAAAA,IATe;AAAA,8CAUdA,IAVc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAATM,SAAS;AAAA;AAAA;AAAA,GAAf","sourcesContent":["\nconst baseUrl = process.env.BASE_URL\n\nexport const getData = async (url, token) => {\n    const res = await fetch(`${baseUrl}/api/${url}`, {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': token\n        }\n    })\n    const data = await res.json()\n    return data\n}\n\nexport const postData = async (url, post, token) => {\n    const res = await fetch(`${baseUrl}/api/${url}`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': token\n        },\n        body: JSON.stringify(post)\n    })\n    const data = await res.json()\n    return data\n}\n\nexport const patchData = async (url, post, token) => {\n    const res = await fetch(`${baseUrl}/api/${url}`, {\n        method: 'PATCH',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': token\n        },\n        body: JSON.stringify(post)\n    })\n    const data = await res.json()\n    return data\n}"]},"metadata":{},"sourceType":"module"}