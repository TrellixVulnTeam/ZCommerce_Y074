{"ast":null,"code":"import User from '../../../models/userModel';\nimport connectDB from '../../../utils/connectDB';\nimport bcrypt from 'bcrypt';\nconnectDB();\nexport default (async (req, res) => {\n  switch (req.method) {\n    case \"POST\":\n      return await login(req, res);\n\n    default:\n      break;\n  }\n});\n\nconst login = async (req, res) => {\n  try {\n    const {\n      email,\n      password\n    } = req.body;\n    console.log(req);\n    const user = await User.findOne({\n      email\n    });\n    if (!user) return res.status(400).json({\n      err: 'This email doesnt exists'\n    });\n    const checkPass = await bcrypt.compare(password, user.password);\n    if (!checkPass) return res.status(400).json({\n      err: 'Password incorect'\n    });\n    res.json({\n      user: {\n        name: user.name,\n        email: user.email,\n        role: user.role,\n        avatar: user.avatar,\n        root: user.root\n      }\n    });\n  } catch (err) {\n    return res.status(500).json({\n      err: err.message\n    });\n  }\n};","map":{"version":3,"sources":["/home/zuares/Documents/Project/ZCommerce/pages/api/auth/index.js"],"names":["User","connectDB","bcrypt","req","res","method","login","email","password","body","console","log","user","findOne","status","json","err","checkPass","compare","name","role","avatar","root","message"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,2BAAjB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAIAD,SAAS;AAET,gBAAe,OAAOE,GAAP,EAAYC,GAAZ,KAAoB;AAE/B,UAAQD,GAAG,CAACE,MAAZ;AACI,SAAK,MAAL;AACI,aAAO,MAAMC,KAAK,CAACH,GAAD,EAAMC,GAAN,CAAlB;;AACJ;AACI;AAJR;AAOH,CATD;;AAYA,MAAME,KAAK,GAAG,OAAOH,GAAP,EAAYC,GAAZ,KAAoB;AAC9B,MAAI;AACA,UAAM;AAAEG,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAsBL,GAAG,CAACM,IAAhC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYR,GAAZ;AACA,UAAMS,IAAI,GAAG,MAAMZ,IAAI,CAACa,OAAL,CAAa;AAAEN,MAAAA;AAAF,KAAb,CAAnB;AACA,QAAI,CAACK,IAAL,EACI,OAAOR,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,GAAG,EAAE;AAAP,KAArB,CAAP;AAEJ,UAAMC,SAAS,GAAG,MAAMf,MAAM,CAACgB,OAAP,CAAeV,QAAf,EAAyBI,IAAI,CAACJ,QAA9B,CAAxB;AACA,QAAI,CAACS,SAAL,EACI,OAAOb,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,GAAG,EAAE;AAAP,KAArB,CAAP;AAEJZ,IAAAA,GAAG,CAACW,IAAJ,CAAS;AACLH,MAAAA,IAAI,EAAE;AACFO,QAAAA,IAAI,EAAEP,IAAI,CAACO,IADT;AAEFZ,QAAAA,KAAK,EAAEK,IAAI,CAACL,KAFV;AAGFa,QAAAA,IAAI,EAAER,IAAI,CAACQ,IAHT;AAIFC,QAAAA,MAAM,EAAET,IAAI,CAACS,MAJX;AAKFC,QAAAA,IAAI,EAAEV,IAAI,CAACU;AALT;AADD,KAAT;AAUH,GArBD,CAqBE,OAAON,GAAP,EAAY;AACV,WAAOZ,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,GAAG,EAAEA,GAAG,CAACO;AAAX,KAArB,CAAP;AACH;AACJ,CAzBD","sourcesContent":["import User from '../../../models/userModel'\nimport connectDB from '../../../utils/connectDB'\nimport bcrypt from 'bcrypt'\n\n\n\nconnectDB()\n\nexport default async (req, res) => {\n\n    switch (req.method) {\n        case \"POST\":\n            return await login(req, res)\n        default:\n            break;\n    }\n\n}\n\n\nconst login = async (req, res) => {\n    try {\n        const { email, password } = req.body\n        console.log(req);\n        const user = await User.findOne({ email })\n        if (!user)\n            return res.status(400).json({ err: 'This email doesnt exists' })\n\n        const checkPass = await bcrypt.compare(password, user.password)\n        if (!checkPass)\n            return res.status(400).json({ err: 'Password incorect' })\n\n        res.json({\n            user: {\n                name: user.name,\n                email: user.email,\n                role: user.role,\n                avatar: user.avatar,\n                root: user.root\n            }\n        })\n\n    } catch (err) {\n        return res.status(500).json({ err: err.message })\n    }\n} "]},"metadata":{},"sourceType":"module"}