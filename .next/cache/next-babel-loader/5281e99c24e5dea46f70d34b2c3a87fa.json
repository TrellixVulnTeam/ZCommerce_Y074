{"ast":null,"code":"import connectDB from '../../../utils/connectDB';\nimport User from '../../../models/userModel';\nimport bcrypt from 'bcrypt';\nimport auth from '../../../middleware/auth';\nconnectDB();\nexport default (async (req, res) => {\n  switch (req.method) {\n    case \"PATCH\":\n      await resetPassword(req, res);\n      break;\n  }\n});\n\nconst resetPassword = async (req, res) => {\n  try {\n    const result = await auth(req, res);\n    const {\n      password\n    } = req.body;\n    const passwordHash = await bcrypt(password, 12);\n    await User.findOneAndUpdate({\n      _id: result.id\n    }, {\n      password: passwordHash\n    });\n    res.json({\n      msg: {\n        success: \"Update Success !\"\n      }\n    });\n  } catch (err) {\n    return res.status(500).json({\n      err: err.message\n    });\n  }\n};","map":{"version":3,"sources":["/home/zuares/Documents/Project/ZCommerce/pages/api/user/resetPassword.js"],"names":["connectDB","User","bcrypt","auth","req","res","method","resetPassword","result","password","body","passwordHash","findOneAndUpdate","_id","id","json","msg","success","err","status","message"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,0BAAtB;AACA,OAAOC,IAAP,MAAiB,2BAAjB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,IAAP,MAAiB,0BAAjB;AAEAH,SAAS;AAET,gBAAe,OAAOI,GAAP,EAAYC,GAAZ,KAAoB;AAE/B,UAAQD,GAAG,CAACE,MAAZ;AACI,SAAK,OAAL;AACI,YAAMC,aAAa,CAACH,GAAD,EAAMC,GAAN,CAAnB;AACA;AAHR;AAKH,CAPD;;AASA,MAAME,aAAa,GAAG,OAAOH,GAAP,EAAYC,GAAZ,KAAoB;AACtC,MAAI;AACA,UAAMG,MAAM,GAAG,MAAML,IAAI,CAACC,GAAD,EAAMC,GAAN,CAAzB;AACA,UAAM;AAAEI,MAAAA;AAAF,QAAeL,GAAG,CAACM,IAAzB;AAEA,UAAMC,YAAY,GAAG,MAAMT,MAAM,CAACO,QAAD,EAAW,EAAX,CAAjC;AAEA,UAAMR,IAAI,CAACW,gBAAL,CAAsB;AAAEC,MAAAA,GAAG,EAAEL,MAAM,CAACM;AAAd,KAAtB,EAA0C;AAC5CL,MAAAA,QAAQ,EAAEE;AADkC,KAA1C,CAAN;AAGAN,IAAAA,GAAG,CAACU,IAAJ,CAAS;AAAEC,MAAAA,GAAG,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX;AAAP,KAAT;AAEH,GAXD,CAWE,OAAOC,GAAP,EAAY;AACV,WAAOb,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBJ,IAAhB,CAAqB;AAAEG,MAAAA,GAAG,EAAEA,GAAG,CAACE;AAAX,KAArB,CAAP;AACH;AACJ,CAfD","sourcesContent":["import connectDB from '../../../utils/connectDB'\nimport User from '../../../models/userModel'\nimport bcrypt from 'bcrypt'\nimport auth from '../../../middleware/auth'\n\nconnectDB()\n\nexport default async (req, res) => {\n\n    switch (req.method) {\n        case \"PATCH\":\n            await resetPassword(req, res)\n            break\n    }\n}\n\nconst resetPassword = async (req, res) => {\n    try {\n        const result = await auth(req, res)\n        const { password } = req.body\n\n        const passwordHash = await bcrypt(password, 12)\n\n        await User.findOneAndUpdate({ _id: result.id }, {\n            password: passwordHash\n        })\n        res.json({ msg: { success: \"Update Success !\" } })\n\n    } catch (err) {\n        return res.status(500).json({ err: err.message })\n    }\n}\n"]},"metadata":{},"sourceType":"module"}