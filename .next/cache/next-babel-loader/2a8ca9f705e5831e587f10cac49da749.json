{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport const Actions = {\n  Notify: \"NOTIFY\",\n  Auth: \"AUTH\",\n  Cart: \"CART\"\n};\nexport const addToCart = (product, cart) => {\n  if (product.inStock == 0) return {\n    type: \"NOTIFY\",\n    payload: {\n      msg: {\n        err: 'This product out of stock'\n      }\n    }\n  };\n  const inCart = cart.every(item => item._id !== product._id);\n  if (!inCart) return {\n    type: \"CART\",\n    payload: [...cart, _objectSpread(_objectSpread({}, product), {}, {\n      quatity: 1\n    })]\n  };\n};","map":{"version":3,"sources":["/home/zuares/Documents/Project/ZCommerce/store/Actions.js"],"names":["Actions","Notify","Auth","Cart","addToCart","product","cart","inStock","type","payload","msg","err","inCart","every","item","_id","quatity"],"mappings":";;;;;;AACA,OAAO,MAAMA,OAAO,GAAG;AACnBC,EAAAA,MAAM,EAAE,QADW;AAEnBC,EAAAA,IAAI,EAAE,MAFa;AAGnBC,EAAAA,IAAI,EAAE;AAHa,CAAhB;AAMP,OAAO,MAAMC,SAAS,GAAG,CAACC,OAAD,EAAUC,IAAV,KAAmB;AACxC,MAAID,OAAO,CAACE,OAAR,IAAmB,CAAvB,EACI,OAAO;AAAEC,IAAAA,IAAI,EAAE,QAAR;AAAkBC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,GAAG,EAAE;AAAEC,QAAAA,GAAG,EAAE;AAAP;AAAP;AAA3B,GAAP;AAEJ,QAAMC,MAAM,GAAGN,IAAI,CAACO,KAAL,CAAWC,IAAI,IAAIA,IAAI,CAACC,GAAL,KAAaV,OAAO,CAACU,GAAxC,CAAf;AACA,MAAI,CAACH,MAAL,EACI,OAAO;AACHJ,IAAAA,IAAI,EAAE,MADH;AACWC,IAAAA,OAAO,EAAE,CAAC,GAAGH,IAAJ,kCAAeD,OAAf;AAAwBW,MAAAA,OAAO,EAAE;AAAjC;AADpB,GAAP;AAGP,CATM","sourcesContent":["\nexport const Actions = {\n    Notify: \"NOTIFY\",\n    Auth: \"AUTH\",\n    Cart: \"CART\",\n}\n\nexport const addToCart = (product, cart) => {\n    if (product.inStock == 0)\n        return { type: \"NOTIFY\", payload: { msg: { err: 'This product out of stock' } } }\n\n    const inCart = cart.every(item => item._id !== product._id)\n    if (!inCart)\n        return {\n            type: \"CART\", payload: [...cart, { ...product, quatity: 1 }]\n        }\n}"]},"metadata":{},"sourceType":"module"}