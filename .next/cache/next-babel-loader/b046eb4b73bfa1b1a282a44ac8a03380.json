{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/zuares/Documents/Project/ZCommerce/store/GlobalState.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { createContext, useReducer, useEffect } from 'react';\nimport { getData } from '../utils/fetchData';\nimport reducers from './Reducer';\nexport const DataContext = /*#__PURE__*/createContext();\n\nfunction DataProvider({\n  children\n}) {\n  const initialState = {\n    notify: {},\n    auth: {},\n    cart: [],\n    orders: []\n  };\n  const {\n    0: state,\n    1: dispatch\n  } = useReducer(reducers, initialState);\n  const {\n    cart,\n    auth\n  } = state;\n  useEffect(() => {\n    const fetchUser = async () => {\n      const data = await getData('auth/accessToken');\n      dispatch({\n        type: 'AUTH',\n        payload: _objectSpread({}, data)\n      });\n    };\n\n    fetchUser();\n  }, []);\n  useEffect(() => {\n    const MyCart = JSON.parse(localStorage.getItem('MyCart'));\n    if (MyCart) return dispatch({\n      type: \"CART\",\n      payload: MyCart\n    });\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('MyCart', JSON.stringify(cart));\n  }, [cart]);\n  useEffect(() => {\n    if (auth.access_token) {\n      getData('order', auth.access_token).then(res => console.log(res));\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(DataContext.Provider, {\n    value: {\n      state,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n\nexport default DataProvider;","map":{"version":3,"sources":["/home/zuares/Documents/Project/ZCommerce/store/GlobalState.js"],"names":["React","createContext","useReducer","useEffect","getData","reducers","DataContext","DataProvider","children","initialState","notify","auth","cart","orders","state","dispatch","fetchUser","data","type","payload","MyCart","JSON","parse","localStorage","getItem","setItem","stringify","access_token","then","res","console","log"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,SAA3C,QAA4D,OAA5D;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,OAAOC,QAAP,MAAqB,WAArB;AAGA,OAAO,MAAMC,WAAW,gBAAGL,aAAa,EAAjC;;AAEP,SAASM,YAAT,CAAsB;AAAEC,EAAAA;AAAF,CAAtB,EAAoC;AAChC,QAAMC,YAAY,GAAG;AAAEC,IAAAA,MAAM,EAAE,EAAV;AAAcC,IAAAA,IAAI,EAAE,EAApB;AAAwBC,IAAAA,IAAI,EAAE,EAA9B;AAAkCC,IAAAA,MAAM,EAAE;AAA1C,GAArB;AACA,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBb,UAAU,CAACG,QAAD,EAAWI,YAAX,CAApC;AACA,QAAM;AAAEG,IAAAA,IAAF;AAAQD,IAAAA;AAAR,MAAiBG,KAAvB;AACAX,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMa,SAAS,GAAG,YAAY;AAC1B,YAAMC,IAAI,GAAG,MAAMb,OAAO,CAAC,kBAAD,CAA1B;AACAW,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAE,MAAR;AAAgBC,QAAAA,OAAO,oBAAOF,IAAP;AAAvB,OAAD,CAAR;AACH,KAHD;;AAKAD,IAAAA,SAAS;AACZ,GAPQ,EAON,EAPM,CAAT;AASAb,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMiB,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAX,CAAf;AACA,QAAIJ,MAAJ,EACI,OAAOL,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAE,MAAR;AAAgBC,MAAAA,OAAO,EAAEC;AAAzB,KAAD,CAAf;AACP,GAJQ,EAIN,EAJM,CAAT;AAMAjB,EAAAA,SAAS,CAAC,MAAM;AACZoB,IAAAA,YAAY,CAACE,OAAb,CAAqB,QAArB,EAA+BJ,IAAI,CAACK,SAAL,CAAed,IAAf,CAA/B;AACH,GAFQ,EAEN,CAACA,IAAD,CAFM,CAAT;AAIAT,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIQ,IAAI,CAACgB,YAAT,EAAuB;AACnBvB,MAAAA,OAAO,CAAC,OAAD,EAAUO,IAAI,CAACgB,YAAf,CAAP,CACKC,IADL,CACUC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CADjB;AAEH;AACJ,GALQ,EAKN,EALM,CAAT;AAOA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEf,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAA7B;AAAA,cACKP;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;AAED,eAAeD,YAAf","sourcesContent":["import React, { createContext, useReducer, useEffect } from 'react';\nimport { getData } from '../utils/fetchData';\nimport reducers from './Reducer';\n\n\nexport const DataContext = createContext()\n\nfunction DataProvider({ children }) {\n    const initialState = { notify: {}, auth: {}, cart: [], orders: [] }\n    const [state, dispatch] = useReducer(reducers, initialState)\n    const { cart, auth } = state\n    useEffect(() => {\n        const fetchUser = async () => {\n            const data = await getData('auth/accessToken')\n            dispatch({ type: 'AUTH', payload: { ...data } })\n        }\n\n        fetchUser()\n    }, [])\n\n    useEffect(() => {\n        const MyCart = JSON.parse(localStorage.getItem('MyCart'))\n        if (MyCart)\n            return dispatch({ type: \"CART\", payload: MyCart })\n    }, [])\n\n    useEffect(() => {\n        localStorage.setItem('MyCart', JSON.stringify(cart))\n    }, [cart])\n\n    useEffect(() => {\n        if (auth.access_token) {\n            getData('order', auth.access_token)\n                .then(res => console.log(res))\n        }\n    }, [])\n\n    return (\n        <DataContext.Provider value={{ state, dispatch }}>\n            {children}\n        </DataContext.Provider>\n    );\n\n}\n\nexport default DataProvider;"]},"metadata":{},"sourceType":"module"}