{"ast":null,"code":"import User from '../../../models/userModel';\nexport default (async (req, res) => {\n  switch (req.method) {\n    case \"POST\":\n      login(req, res);\n\n    default:\n      break;\n  }\n});\n\nconst login = async (req, res) => {\n  try {\n    const {\n      email,\n      password\n    } = req.body;\n    console.log(email);\n    if (!email || !password) return res.status(400).json({\n      err: 'Please add all field'\n    });\n    if (password.length < 6) return res.status(400).json({\n      err: 'Password too short'\n    });\n    const user = await User.findOne({\n      email\n    });\n    console.log(user);\n  } catch (err) {\n    return res.status(500).json({\n      err: err.message\n    });\n  }\n};","map":{"version":3,"sources":["/home/zuares/Documents/Project/ZCommerce/pages/api/auth/index.js"],"names":["User","req","res","method","login","email","password","body","console","log","status","json","err","length","user","findOne","message"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,2BAAjB;AAEA,gBAAe,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAE/B,UAAQD,GAAG,CAACE,MAAZ;AACI,SAAK,MAAL;AACIC,MAAAA,KAAK,CAACH,GAAD,EAAMC,GAAN,CAAL;;AACJ;AACI;AAJR;AAOH,CATD;;AAYA,MAAME,KAAK,GAAG,OAAOH,GAAP,EAAYC,GAAZ,KAAoB;AAC9B,MAAI;AACA,UAAM;AAAEG,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAsBL,GAAG,CAACM,IAAhC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACA,QAAI,CAACA,KAAD,IAAU,CAACC,QAAf,EACI,OAAOJ,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,GAAG,EAAE;AAAP,KAArB,CAAP;AAEJ,QAAIN,QAAQ,CAACO,MAAT,GAAkB,CAAtB,EACI,OAAOX,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,GAAG,EAAE;AAAP,KAArB,CAAP;AAEJ,UAAME,IAAI,GAAG,MAAMd,IAAI,CAACe,OAAL,CAAa;AAAEV,MAAAA;AAAF,KAAb,CAAnB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYK,IAAZ;AAGH,GAbD,CAaE,OAAOF,GAAP,EAAY;AACV,WAAOV,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,GAAG,EAAEA,GAAG,CAACI;AAAX,KAArB,CAAP;AACH;AACJ,CAjBD","sourcesContent":["import User from '../../../models/userModel'\n\nexport default async (req, res) => {\n\n    switch (req.method) {\n        case \"POST\":\n            login(req, res)\n        default:\n            break;\n    }\n\n}\n\n\nconst login = async (req, res) => {\n    try {\n        const { email, password } = req.body\n        console.log(email);\n        if (!email || !password)\n            return res.status(400).json({ err: 'Please add all field' })\n\n        if (password.length < 6)\n            return res.status(400).json({ err: 'Password too short' })\n\n        const user = await User.findOne({ email })\n        console.log(user);\n\n\n    } catch (err) {\n        return res.status(500).json({ err: err.message })\n    }\n} "]},"metadata":{},"sourceType":"module"}