{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/zuares/Documents/Project/ZCommerce/components/molecules/Button/PayButton.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useRef } from 'react';\nimport { postData } from '../../../utils/fetchData';\n\nfunction PayButton({\n  total,\n  address,\n  mobile,\n  state,\n  dispatch\n}) {\n  const refPayBtn = useRef();\n  const {\n    cart,\n    auth,\n    order\n  } = state;\n  useEffect(() => {\n    paypal.Buttons({\n      createOrder: function (data, actions) {\n        // This function sets up the details of the transaction, including the amount and line item details.\n        return actions.order.create({\n          purchase_units: [{\n            amount: {\n              value: '0.01'\n            }\n          }]\n        });\n      },\n      onApprove: function (data, actions) {\n        // This function captures the funds from the transaction.\n        return actions.order.capture().then(function (details) {\n          // This function shows a transaction success message to your buyer.\n          postData('order', {\n            address,\n            mobile,\n            cart,\n            total\n          }, auth.access_token).then(res => {\n            if (res.err) return dispatch({\n              type: \"NOTIFY\",\n              payload: {\n                msg: {\n                  err: res.err\n                }\n              }\n            });\n            dispatch({\n              type: \"CART\",\n              payload: []\n            });\n\n            const newOrder = _objectSpread(_objectSpread({}, res.newOrder), {}, {\n              user: auth.user\n            });\n\n            dispatch({\n              type: \"ORDER\",\n              payload: [...order, newOrder]\n            });\n            dispatch({\n              type: \"NOTIFY\",\n              payload: {\n                msg: {\n                  success: res.msg\n                }\n              }\n            });\n          });\n          alert('Transaction completed by ' + details.payer.name.given_name);\n        });\n      }\n    }).render(refPayBtn.current);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: refPayBtn\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\nexport default PayButton;","map":{"version":3,"sources":["/home/zuares/Documents/Project/ZCommerce/components/molecules/Button/PayButton.js"],"names":["React","useEffect","useRef","postData","PayButton","total","address","mobile","state","dispatch","refPayBtn","cart","auth","order","paypal","Buttons","createOrder","data","actions","create","purchase_units","amount","value","onApprove","capture","then","details","access_token","res","err","type","payload","msg","newOrder","user","success","alert","payer","name","given_name","render","current"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,SAASC,QAAT,QAAyB,0BAAzB;;AAEA,SAASC,SAAT,CAAmB;AAAEC,EAAAA,KAAF;AAASC,EAAAA,OAAT;AAAkBC,EAAAA,MAAlB;AAA0BC,EAAAA,KAA1B;AAAiCC,EAAAA;AAAjC,CAAnB,EAAgE;AAC5D,QAAMC,SAAS,GAAGR,MAAM,EAAxB;AACA,QAAM;AAAES,IAAAA,IAAF;AAAQC,IAAAA,IAAR;AAAcC,IAAAA;AAAd,MAAwBL,KAA9B;AACAP,EAAAA,SAAS,CAAC,MAAM;AACZa,IAAAA,MAAM,CAACC,OAAP,CAAe;AACXC,MAAAA,WAAW,EAAE,UAAUC,IAAV,EAAgBC,OAAhB,EAAyB;AAClC;AACA,eAAOA,OAAO,CAACL,KAAR,CAAcM,MAAd,CAAqB;AACxBC,UAAAA,cAAc,EAAE,CAAC;AACbC,YAAAA,MAAM,EAAE;AACJC,cAAAA,KAAK,EAAE;AADH;AADK,WAAD;AADQ,SAArB,CAAP;AAOH,OAVU;AAWXC,MAAAA,SAAS,EAAE,UAAUN,IAAV,EAAgBC,OAAhB,EAAyB;AAChC;AACA,eAAOA,OAAO,CAACL,KAAR,CAAcW,OAAd,GAAwBC,IAAxB,CAA6B,UAAUC,OAAV,EAAmB;AACnD;AACAvB,UAAAA,QAAQ,CAAC,OAAD,EAAU;AAAEG,YAAAA,OAAF;AAAWC,YAAAA,MAAX;AAAmBI,YAAAA,IAAnB;AAAyBN,YAAAA;AAAzB,WAAV,EAA4CO,IAAI,CAACe,YAAjD,CAAR,CACKF,IADL,CACUG,GAAG,IAAI;AACT,gBAAIA,GAAG,CAACC,GAAR,EAAa,OAAOpB,QAAQ,CAAC;AAAEqB,cAAAA,IAAI,EAAE,QAAR;AAAkBC,cAAAA,OAAO,EAAE;AAAEC,gBAAAA,GAAG,EAAE;AAAEH,kBAAAA,GAAG,EAAED,GAAG,CAACC;AAAX;AAAP;AAA3B,aAAD,CAAf;AAEbpB,YAAAA,QAAQ,CAAC;AAAEqB,cAAAA,IAAI,EAAE,MAAR;AAAgBC,cAAAA,OAAO,EAAE;AAAzB,aAAD,CAAR;;AACA,kBAAME,QAAQ,mCACPL,GAAG,CAACK,QADG;AAEVC,cAAAA,IAAI,EAAEtB,IAAI,CAACsB;AAFD,cAAd;;AAIAzB,YAAAA,QAAQ,CAAC;AAAEqB,cAAAA,IAAI,EAAE,OAAR;AAAiBC,cAAAA,OAAO,EAAE,CAAC,GAAGlB,KAAJ,EAAWoB,QAAX;AAA1B,aAAD,CAAR;AACAxB,YAAAA,QAAQ,CAAC;AAAEqB,cAAAA,IAAI,EAAE,QAAR;AAAkBC,cAAAA,OAAO,EAAE;AAAEC,gBAAAA,GAAG,EAAE;AAAEG,kBAAAA,OAAO,EAAEP,GAAG,CAACI;AAAf;AAAP;AAA3B,aAAD,CAAR;AACH,WAXL;AAaAI,UAAAA,KAAK,CAAC,8BAA8BV,OAAO,CAACW,KAAR,CAAcC,IAAd,CAAmBC,UAAlD,CAAL;AACH,SAhBM,CAAP;AAiBH;AA9BU,KAAf,EA+BGC,MA/BH,CA+BU9B,SAAS,CAAC+B,OA/BpB;AAiCH,GAlCQ,EAkCN,EAlCM,CAAT;AAmCA,sBACI;AAAK,IAAA,GAAG,EAAE/B;AAAV;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH;;AAED,eAAeN,SAAf","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { postData } from '../../../utils/fetchData';\n\nfunction PayButton({ total, address, mobile, state, dispatch }) {\n    const refPayBtn = useRef()\n    const { cart, auth, order } = state\n    useEffect(() => {\n        paypal.Buttons({\n            createOrder: function (data, actions) {\n                // This function sets up the details of the transaction, including the amount and line item details.\n                return actions.order.create({\n                    purchase_units: [{\n                        amount: {\n                            value: '0.01'\n                        }\n                    }]\n                });\n            },\n            onApprove: function (data, actions) {\n                // This function captures the funds from the transaction.\n                return actions.order.capture().then(function (details) {\n                    // This function shows a transaction success message to your buyer.\n                    postData('order', { address, mobile, cart, total }, auth.access_token)\n                        .then(res => {\n                            if (res.err) return dispatch({ type: \"NOTIFY\", payload: { msg: { err: res.err } } })\n\n                            dispatch({ type: \"CART\", payload: [] })\n                            const newOrder = {\n                                ...res.newOrder,\n                                user: auth.user\n                            }\n                            dispatch({ type: \"ORDER\", payload: [...order, newOrder] })\n                            dispatch({ type: \"NOTIFY\", payload: { msg: { success: res.msg } } })\n                        })\n\n                    alert('Transaction completed by ' + details.payer.name.given_name);\n                });\n            }\n        }).render(refPayBtn.current);\n\n    }, []);\n    return (\n        <div ref={refPayBtn} ></div>\n    );\n}\n\nexport default PayButton;"]},"metadata":{},"sourceType":"module"}