{"ast":null,"code":"import jwt from 'jsonwebtoken';\nimport User from '../../../models/userModel';\nimport connectDB from '../../../utils/connectDB';\nimport { createAccessToken } from '../../../utils/tokenGenerator';\nconnectDB();\nexport default (async (req, res) => {\n  try {\n    const rf_token = req.cookies.refreshToken;\n    if (!rf_token) return res.status(400).json({\n      err: 'Please login '\n    });\n    const result = jwt.verify(rf_token, process.env.REFRESH_TOKEN_SECRET);\n    if (!result) return res.status(400).json({\n      err: 'Your token is incorect or has expired '\n    });\n    console.log(result); // const user = await User.findById({ result.id })\n\n    if (!user) return res.status(400).json({\n      err: 'User doesnt exists'\n    });\n    const access_token = createAccessToken({\n      id: user._id\n    });\n    return res.json({\n      access_token,\n      user: {\n        name: user.name,\n        email: user.email,\n        root: user.root,\n        role: user.role,\n        avatar: user.avatar\n      }\n    });\n  } catch (err) {\n    return res.status(500).json({\n      err: err.message\n    });\n  }\n});","map":{"version":3,"sources":["/home/zuares/Documents/Project/ZCommerce/pages/api/auth/accessToken.js"],"names":["jwt","User","connectDB","createAccessToken","req","res","rf_token","cookies","refreshToken","status","json","err","result","verify","process","env","REFRESH_TOKEN_SECRET","console","log","user","access_token","id","_id","name","email","root","role","avatar","message"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,cAAhB;AACA,OAAOC,IAAP,MAAiB,2BAAjB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AAEA,SAASC,iBAAT,QAAkC,+BAAlC;AAEAD,SAAS;AAET,gBAAe,OAAOE,GAAP,EAAYC,GAAZ,KAAoB;AAC/B,MAAI;AACA,UAAMC,QAAQ,GAAGF,GAAG,CAACG,OAAJ,CAAYC,YAA7B;AACA,QAAI,CAACF,QAAL,EACI,OAAOD,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,GAAG,EAAE;AAAP,KAArB,CAAP;AACJ,UAAMC,MAAM,GAAGZ,GAAG,CAACa,MAAJ,CAAWP,QAAX,EAAqBQ,OAAO,CAACC,GAAR,CAAYC,oBAAjC,CAAf;AACA,QAAI,CAACJ,MAAL,EACI,OAAOP,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,GAAG,EAAE;AAAP,KAArB,CAAP;AACJM,IAAAA,OAAO,CAACC,GAAR,CAAYN,MAAZ,EAPA,CAQA;;AACA,QAAI,CAACO,IAAL,EACI,OAAOd,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,GAAG,EAAE;AAAP,KAArB,CAAP;AAEJ,UAAMS,YAAY,GAAGjB,iBAAiB,CAAC;AAAEkB,MAAAA,EAAE,EAAEF,IAAI,CAACG;AAAX,KAAD,CAAtC;AAEA,WAAOjB,GAAG,CAACK,IAAJ,CAAS;AACZU,MAAAA,YADY;AAEZD,MAAAA,IAAI,EAAE;AACFI,QAAAA,IAAI,EAAEJ,IAAI,CAACI,IADT;AAEFC,QAAAA,KAAK,EAAEL,IAAI,CAACK,KAFV;AAGFC,QAAAA,IAAI,EAAEN,IAAI,CAACM,IAHT;AAIFC,QAAAA,IAAI,EAAEP,IAAI,CAACO,IAJT;AAKFC,QAAAA,MAAM,EAAER,IAAI,CAACQ;AALX;AAFM,KAAT,CAAP;AAWH,GAzBD,CAyBE,OAAOhB,GAAP,EAAY;AACV,WAAON,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,GAAG,EAAEA,GAAG,CAACiB;AAAX,KAArB,CAAP;AACH;AACJ,CA7BD","sourcesContent":["import jwt from 'jsonwebtoken'\nimport User from '../../../models/userModel'\nimport connectDB from '../../../utils/connectDB'\n\nimport { createAccessToken } from '../../../utils/tokenGenerator'\n\nconnectDB()\n\nexport default async (req, res) => {\n    try {\n        const rf_token = req.cookies.refreshToken;\n        if (!rf_token)\n            return res.status(400).json({ err: 'Please login ' })\n        const result = jwt.verify(rf_token, process.env.REFRESH_TOKEN_SECRET)\n        if (!result)\n            return res.status(400).json({ err: 'Your token is incorect or has expired ' })\n        console.log(result);\n        // const user = await User.findById({ result.id })\n        if (!user)\n            return res.status(400).json({ err: 'User doesnt exists' })\n\n        const access_token = createAccessToken({ id: user._id })\n\n        return res.json({\n            access_token,\n            user: {\n                name: user.name,\n                email: user.email,\n                root: user.root,\n                role: user.role,\n                avatar: user.avatar,\n            }\n        })\n\n    } catch (err) {\n        return res.status(500).json({ err: err.message })\n    }\n}"]},"metadata":{},"sourceType":"module"}