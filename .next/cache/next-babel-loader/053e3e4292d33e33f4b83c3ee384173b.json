{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/zuares/Documents/Project/ZCommerce/components/molecules/Button/PayButton.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useRef } from 'react';\nimport { DataContext } from '../../../store/GlobalState';\nimport { patchData } from '../../../utils/fetchData';\nimport { updateItem } from '../../../store/Actions';\n\nfunction PayButton(_ref) {\n  _s();\n\n  var order = _ref.order;\n  var refPayBtn = useRef();\n\n  var _useContext = useContext(DataContext),\n      state = _useContext.state,\n      dispatch = _useContext.dispatch;\n\n  var cart = state.cart,\n      auth = state.auth;\n  useEffect(function () {\n    paypal.Buttons({\n      createOrder: function createOrder(data, actions) {\n        // This function sets up the details of the transaction, including the amount and line item details.\n        return actions.order.create({\n          purchase_units: [{\n            amount: {\n              value: '0.01'\n            }\n          }]\n        });\n      },\n      onApprove: function onApprove(data, actions) {\n        // This function captures the funds from the transaction.\n        return actions.order.capture().then(function (details) {\n          // This function shows a transaction success message to your buyer.\n          patchData(\"order/\".concat(order._id), {\n            address: address,\n            mobile: mobile,\n            cart: cart,\n            total: total\n          }, auth.access_token).then(function (res) {\n            if (res.err) return dispatch({\n              type: \"NOTIFY\",\n              payload: {\n                msg: {\n                  err: res.err\n                }\n              }\n            });\n            dispatch({\n              type: \"ORDER\",\n              payload: [].concat(_toConsumableArray(order), [newOrder])\n            });\n            return dispatch({\n              type: \"NOTIFY\",\n              payload: {\n                msg: {\n                  success: res.msg\n                }\n              }\n            });\n          });\n          alert('Transaction completed by ' + details.payer.name.given_name);\n        });\n      }\n    }).render(refPayBtn.current);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: refPayBtn\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PayButton, \"0osEhplNkDlkktMTThxZ8sk4Oh0=\");\n\n_c = PayButton;\nexport default PayButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"PayButton\");","map":{"version":3,"sources":["/home/zuares/Documents/Project/ZCommerce/components/molecules/Button/PayButton.js"],"names":["React","useContext","useEffect","useRef","DataContext","patchData","updateItem","PayButton","order","refPayBtn","state","dispatch","cart","auth","paypal","Buttons","createOrder","data","actions","create","purchase_units","amount","value","onApprove","capture","then","details","_id","address","mobile","total","access_token","res","err","type","payload","msg","newOrder","success","alert","payer","name","given_name","render","current"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,MAAvC,QAAqD,OAArD;AACA,SAASC,WAAT,QAA4B,4BAA5B;AACA,SAASC,SAAT,QAA0B,0BAA1B;AACA,SAASC,UAAT,QAA2B,wBAA3B;;AAEA,SAASC,SAAT,OAA8B;AAAA;;AAAA,MAATC,KAAS,QAATA,KAAS;AAC1B,MAAMC,SAAS,GAAGN,MAAM,EAAxB;;AAD0B,oBAEEF,UAAU,CAACG,WAAD,CAFZ;AAAA,MAElBM,KAFkB,eAElBA,KAFkB;AAAA,MAEXC,QAFW,eAEXA,QAFW;;AAAA,MAGlBC,IAHkB,GAGHF,KAHG,CAGlBE,IAHkB;AAAA,MAGZC,IAHY,GAGHH,KAHG,CAGZG,IAHY;AAI1BX,EAAAA,SAAS,CAAC,YAAM;AACZY,IAAAA,MAAM,CAACC,OAAP,CAAe;AACXC,MAAAA,WAAW,EAAE,qBAAUC,IAAV,EAAgBC,OAAhB,EAAyB;AAClC;AACA,eAAOA,OAAO,CAACV,KAAR,CAAcW,MAAd,CAAqB;AACxBC,UAAAA,cAAc,EAAE,CAAC;AACbC,YAAAA,MAAM,EAAE;AACJC,cAAAA,KAAK,EAAE;AADH;AADK,WAAD;AADQ,SAArB,CAAP;AAOH,OAVU;AAWXC,MAAAA,SAAS,EAAE,mBAAUN,IAAV,EAAgBC,OAAhB,EAAyB;AAChC;AACA,eAAOA,OAAO,CAACV,KAAR,CAAcgB,OAAd,GAAwBC,IAAxB,CAA6B,UAAUC,OAAV,EAAmB;AACnD;AACArB,UAAAA,SAAS,iBAAUG,KAAK,CAACmB,GAAhB,GAAuB;AAAEC,YAAAA,OAAO,EAAPA,OAAF;AAAWC,YAAAA,MAAM,EAANA,MAAX;AAAmBjB,YAAAA,IAAI,EAAJA,IAAnB;AAAyBkB,YAAAA,KAAK,EAALA;AAAzB,WAAvB,EAAyDjB,IAAI,CAACkB,YAA9D,CAAT,CACKN,IADL,CACU,UAAAO,GAAG,EAAI;AACT,gBAAIA,GAAG,CAACC,GAAR,EAAa,OAAOtB,QAAQ,CAAC;AAAEuB,cAAAA,IAAI,EAAE,QAAR;AAAkBC,cAAAA,OAAO,EAAE;AAAEC,gBAAAA,GAAG,EAAE;AAAEH,kBAAAA,GAAG,EAAED,GAAG,CAACC;AAAX;AAAP;AAA3B,aAAD,CAAf;AAEbtB,YAAAA,QAAQ,CAAC;AAAEuB,cAAAA,IAAI,EAAE,OAAR;AAAiBC,cAAAA,OAAO,+BAAM3B,KAAN,IAAa6B,QAAb;AAAxB,aAAD,CAAR;AAEA,mBAAO1B,QAAQ,CAAC;AAAEuB,cAAAA,IAAI,EAAE,QAAR;AAAkBC,cAAAA,OAAO,EAAE;AAAEC,gBAAAA,GAAG,EAAE;AAAEE,kBAAAA,OAAO,EAAEN,GAAG,CAACI;AAAf;AAAP;AAA3B,aAAD,CAAf;AACH,WAPL;AASAG,UAAAA,KAAK,CAAC,8BAA8Bb,OAAO,CAACc,KAAR,CAAcC,IAAd,CAAmBC,UAAlD,CAAL;AACH,SAZM,CAAP;AAaH;AA1BU,KAAf,EA2BGC,MA3BH,CA2BUlC,SAAS,CAACmC,OA3BpB;AA6BH,GA9BQ,EA8BN,EA9BM,CAAT;AA+BA,sBACI;AAAK,IAAA,GAAG,EAAEnC;AAAV;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH;;GAtCQF,S;;KAAAA,S;AAwCT,eAAeA,SAAf","sourcesContent":["import React, { useContext, useEffect, useRef } from 'react';\nimport { DataContext } from '../../../store/GlobalState';\nimport { patchData } from '../../../utils/fetchData';\nimport { updateItem } from '../../../store/Actions';\n\nfunction PayButton({ order }) {\n    const refPayBtn = useRef()\n    const { state, dispatch } = useContext(DataContext)\n    const { cart, auth } = state\n    useEffect(() => {\n        paypal.Buttons({\n            createOrder: function (data, actions) {\n                // This function sets up the details of the transaction, including the amount and line item details.\n                return actions.order.create({\n                    purchase_units: [{\n                        amount: {\n                            value: '0.01'\n                        }\n                    }]\n                });\n            },\n            onApprove: function (data, actions) {\n                // This function captures the funds from the transaction.\n                return actions.order.capture().then(function (details) {\n                    // This function shows a transaction success message to your buyer.\n                    patchData(`order/${order._id}`, { address, mobile, cart, total }, auth.access_token)\n                        .then(res => {\n                            if (res.err) return dispatch({ type: \"NOTIFY\", payload: { msg: { err: res.err } } })\n\n                            dispatch({ type: \"ORDER\", payload: [...order, newOrder] })\n\n                            return dispatch({ type: \"NOTIFY\", payload: { msg: { success: res.msg } } })\n                        })\n\n                    alert('Transaction completed by ' + details.payer.name.given_name);\n                });\n            }\n        }).render(refPayBtn.current);\n\n    }, []);\n    return (\n        <div ref={refPayBtn} ></div>\n    );\n}\n\nexport default PayButton;"]},"metadata":{},"sourceType":"module"}