{"ast":null,"code":"import connectDB from '../../../utils/connectDB';\nimport Order from '../../../models/orderModel';\nimport Product from '../../../models/productModel';\nimport auth from '../../../middleware/auth';\nconnectDB();\nexport default (async (req, res) => {\n  switch (req.method) {\n    case \"POST\":\n      await createOrder(req, res);\n\n    default:\n      break;\n  }\n});\n\nconst createOrder = async (req, res) => {\n  try {\n    const result = await auth(req, res);\n    const {\n      address,\n      mobile,\n      cart,\n      total\n    } = req.body;\n    const newOrder = new Order({\n      user: result._id,\n      address,\n      mobile,\n      cart,\n      total\n    });\n    newOrder.save();\n    cart.filter(item => {\n      return sold(item._id, item.quantity, item.inStock, item.sold);\n    });\n    return res.json({\n      msg: 'Payment Success',\n      newOrder\n    });\n  } catch (err) {\n    return res.status(500).json({\n      err: err.message\n    });\n  }\n};\n\nconst sold = async (id, quantity, oldInStock, oldStock) => {\n  await Product.findOneAndUpdate({\n    _id,\n    id\n  }, {\n    inStock: oldInStock - quantity,\n    sold: quantity + oldStock\n  });\n};","map":{"version":3,"sources":["/home/zuares/Documents/Project/ZCommerce/pages/api/order/index.js"],"names":["connectDB","Order","Product","auth","req","res","method","createOrder","result","address","mobile","cart","total","body","newOrder","user","_id","save","filter","item","sold","quantity","inStock","json","msg","err","status","message","id","oldInStock","oldStock","findOneAndUpdate"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,0BAAtB;AACA,OAAOC,KAAP,MAAkB,4BAAlB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,IAAP,MAAiB,0BAAjB;AAEAH,SAAS;AAET,gBAAe,OAAOI,GAAP,EAAYC,GAAZ,KAAoB;AAC/B,UAAQD,GAAG,CAACE,MAAZ;AACI,SAAK,MAAL;AACI,YAAMC,WAAW,CAACH,GAAD,EAAMC,GAAN,CAAjB;;AACJ;AACI;AAJR;AAMH,CAPD;;AASA,MAAME,WAAW,GAAG,OAAOH,GAAP,EAAYC,GAAZ,KAAoB;AACpC,MAAI;AACA,UAAMG,MAAM,GAAG,MAAML,IAAI,CAACC,GAAD,EAAMC,GAAN,CAAzB;AACA,UAAM;AAAEI,MAAAA,OAAF;AAAWC,MAAAA,MAAX;AAAmBC,MAAAA,IAAnB;AAAyBC,MAAAA;AAAzB,QAAmCR,GAAG,CAACS,IAA7C;AAEA,UAAMC,QAAQ,GAAG,IAAIb,KAAJ,CAAU;AACvBc,MAAAA,IAAI,EAAEP,MAAM,CAACQ,GADU;AACLP,MAAAA,OADK;AACIC,MAAAA,MADJ;AACYC,MAAAA,IADZ;AACkBC,MAAAA;AADlB,KAAV,CAAjB;AAGAE,IAAAA,QAAQ,CAACG,IAAT;AACAN,IAAAA,IAAI,CAACO,MAAL,CAAYC,IAAI,IAAI;AAChB,aAAOC,IAAI,CAACD,IAAI,CAACH,GAAN,EAAWG,IAAI,CAACE,QAAhB,EAA0BF,IAAI,CAACG,OAA/B,EAAwCH,IAAI,CAACC,IAA7C,CAAX;AACH,KAFD;AAGA,WAAOf,GAAG,CAACkB,IAAJ,CAAS;AACZC,MAAAA,GAAG,EAAE,iBADO;AAEZV,MAAAA;AAFY,KAAT,CAAP;AAKH,GAhBD,CAgBE,OAAOW,GAAP,EAAY;AACV,WAAOpB,GAAG,CAACqB,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEE,MAAAA,GAAG,EAAEA,GAAG,CAACE;AAAX,KAArB,CAAP;AACH;AACJ,CApBD;;AAsBA,MAAMP,IAAI,GAAG,OAAOQ,EAAP,EAAWP,QAAX,EAAqBQ,UAArB,EAAiCC,QAAjC,KAA8C;AACvD,QAAM5B,OAAO,CAAC6B,gBAAR,CAAyB;AAAEf,IAAAA,GAAF;AAAOY,IAAAA;AAAP,GAAzB,EAAsC;AACxCN,IAAAA,OAAO,EAAEO,UAAU,GAAGR,QADkB;AAExCD,IAAAA,IAAI,EAAEC,QAAQ,GAAGS;AAFuB,GAAtC,CAAN;AAIH,CALD","sourcesContent":["import connectDB from '../../../utils/connectDB'\nimport Order from '../../../models/orderModel'\nimport Product from '../../../models/productModel'\nimport auth from '../../../middleware/auth'\n\nconnectDB()\n\nexport default async (req, res) => {\n    switch (req.method) {\n        case \"POST\":\n            await createOrder(req, res)\n        default:\n            break;\n    }\n}\n\nconst createOrder = async (req, res) => {\n    try {\n        const result = await auth(req, res)\n        const { address, mobile, cart, total } = req.body\n\n        const newOrder = new Order({\n            user: result._id, address, mobile, cart, total\n        })\n        newOrder.save()\n        cart.filter(item => {\n            return sold(item._id, item.quantity, item.inStock, item.sold)\n        })\n        return res.json({\n            msg: 'Payment Success',\n            newOrder\n        })\n\n    } catch (err) {\n        return res.status(500).json({ err: err.message })\n    }\n}\n\nconst sold = async (id, quantity, oldInStock, oldStock) => {\n    await Product.findOneAndUpdate({ _id, id }, {\n        inStock: oldInStock - quantity,\n        sold: quantity + oldStock\n    })\n}"]},"metadata":{},"sourceType":"module"}