{"ast":null,"code":"import connectDB from '../../../utils/connectDB';\nimport Product from '../../../models/productModel';\nimport { useReducer } from 'react';\nconnectDB();\nexport default (async (req, res) => {\n  switch (req.method) {\n    case 'GET':\n      return await getProduct(req, res);\n\n    default:\n      break;\n  }\n});\n\nconst getProduct = async (req, res) => {\n  try {\n    const id = req.query.id;\n    const product = await Product.findById({\n      id\n    });\n    console.log(id);\n  } catch (err) {\n    return res.status(500).json({\n      err: err.message\n    });\n  }\n};","map":{"version":3,"sources":["/home/zuares/Documents/Project/ZCommerce/pages/api/product/[id].js"],"names":["connectDB","Product","useReducer","req","res","method","getProduct","id","query","product","findById","console","log","err","status","json","message"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,0BAAtB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,SAASC,UAAT,QAA2B,OAA3B;AAEAF,SAAS;AAET,gBAAe,OAAOG,GAAP,EAAYC,GAAZ,KAAoB;AAC/B,UAAQD,GAAG,CAACE,MAAZ;AACI,SAAK,KAAL;AACI,aAAO,MAAMC,UAAU,CAACH,GAAD,EAAMC,GAAN,CAAvB;;AACJ;AACI;AAJR;AAMH,CAPD;;AASA,MAAME,UAAU,GAAG,OAAOH,GAAP,EAAYC,GAAZ,KAAoB;AACnC,MAAI;AACA,UAAMG,EAAE,GAAGJ,GAAG,CAACK,KAAJ,CAAUD,EAArB;AACA,UAAME,OAAO,GAAG,MAAMR,OAAO,CAACS,QAAR,CAAiB;AAAEH,MAAAA;AAAF,KAAjB,CAAtB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYL,EAAZ;AACH,GAJD,CAIE,OAAOM,GAAP,EAAY;AACV,WAAOT,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEF,MAAAA,GAAG,EAAEA,GAAG,CAACG;AAAX,KAArB,CAAP;AACH;AAEJ,CATD","sourcesContent":["import connectDB from '../../../utils/connectDB'\nimport Product from '../../../models/productModel'\nimport { useReducer } from 'react'\n\nconnectDB()\n\nexport default async (req, res) => {\n    switch (req.method) {\n        case 'GET':\n            return await getProduct(req, res)\n        default:\n            break;\n    }\n}\n\nconst getProduct = async (req, res) => {\n    try {\n        const id = req.query.id\n        const product = await Product.findById({ id })\n        console.log(id);\n    } catch (err) {\n        return res.status(500).json({ err: err.message })\n    }\n\n}"]},"metadata":{},"sourceType":"module"}