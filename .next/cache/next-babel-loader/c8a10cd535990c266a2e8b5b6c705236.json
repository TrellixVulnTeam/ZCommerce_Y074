{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/zuares/Documents/Project/ZCommerce/components/molecules/Button/PayButton.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useContext, useEffect, useRef } from 'react';\nimport { DataContext } from '../../../store/GlobalState';\nimport { patchData } from '../../../utils/fetchData';\nimport { updateItem } from '../../../store/Actions';\n\nfunction PayButton({\n  odr\n}) {\n  const refPayBtn = useRef();\n  const {\n    state,\n    dispatch\n  } = useContext(DataContext);\n  const {\n    auth,\n    order\n  } = state;\n  useEffect(() => {\n    paypal.Buttons({\n      createOrder: function (data, actions) {\n        // This function sets up the details of the transaction, including the amount and line item details.\n        return actions.order.create({\n          purchase_units: [{\n            amount: {\n              value: odr.total\n            }\n          }]\n        });\n      },\n      onApprove: function (data, actions) {\n        // This function captures the funds from the transaction.\n        return actions.order.capture().then(function (details) {\n          // This function shows a transaction success message to your buyer.\n          patchData(`order/${odr._id}`, null, auth.access_token).then(res => {\n            console.log(res);\n            if (res.err) return dispatch({\n              type: \"NOTIFY\",\n              payload: {\n                msg: {\n                  err: res.err\n                }\n              }\n            });\n            dispatch(updateItem(order, odr._id), _objectSpread(_objectSpread({}, order), {}, {\n              paid: true,\n              dateOfPayment: new Date().toISOString()\n            }), \"ORDER\");\n            return dispatch({\n              type: \"NOTIFY\",\n              payload: {\n                msg: {\n                  success: res.msg\n                }\n              }\n            });\n          });\n          alert('Transaction completed by ' + details.payer.name.given_name);\n        });\n      }\n    }).render(refPayBtn.current);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: refPayBtn\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n\nexport default PayButton;","map":{"version":3,"sources":["/home/zuares/Documents/Project/ZCommerce/components/molecules/Button/PayButton.js"],"names":["React","useContext","useEffect","useRef","DataContext","patchData","updateItem","PayButton","odr","refPayBtn","state","dispatch","auth","order","paypal","Buttons","createOrder","data","actions","create","purchase_units","amount","value","total","onApprove","capture","then","details","_id","access_token","res","console","log","err","type","payload","msg","paid","dateOfPayment","Date","toISOString","success","alert","payer","name","given_name","render","current"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,MAAvC,QAAqD,OAArD;AACA,SAASC,WAAT,QAA4B,4BAA5B;AACA,SAASC,SAAT,QAA0B,0BAA1B;AACA,SAASC,UAAT,QAA2B,wBAA3B;;AAEA,SAASC,SAAT,CAAmB;AAAEC,EAAAA;AAAF,CAAnB,EAA4B;AACxB,QAAMC,SAAS,GAAGN,MAAM,EAAxB;AACA,QAAM;AAAEO,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBV,UAAU,CAACG,WAAD,CAAtC;AACA,QAAM;AAAEQ,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAkBH,KAAxB;AACAR,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,MAAM,CAACC,OAAP,CAAe;AACXC,MAAAA,WAAW,EAAE,UAAUC,IAAV,EAAgBC,OAAhB,EAAyB;AAClC;AACA,eAAOA,OAAO,CAACL,KAAR,CAAcM,MAAd,CAAqB;AACxBC,UAAAA,cAAc,EAAE,CAAC;AACbC,YAAAA,MAAM,EAAE;AACJC,cAAAA,KAAK,EAAEd,GAAG,CAACe;AADP;AADK,WAAD;AADQ,SAArB,CAAP;AAOH,OAVU;AAWXC,MAAAA,SAAS,EAAE,UAAUP,IAAV,EAAgBC,OAAhB,EAAyB;AAChC;AACA,eAAOA,OAAO,CAACL,KAAR,CAAcY,OAAd,GAAwBC,IAAxB,CAA6B,UAAUC,OAAV,EAAmB;AACnD;AACAtB,UAAAA,SAAS,CAAE,SAAQG,GAAG,CAACoB,GAAI,EAAlB,EAAqB,IAArB,EAA2BhB,IAAI,CAACiB,YAAhC,CAAT,CACKH,IADL,CACUI,GAAG,IAAI;AACTC,YAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,gBAAIA,GAAG,CAACG,GAAR,EAAa,OAAOtB,QAAQ,CAAC;AAAEuB,cAAAA,IAAI,EAAE,QAAR;AAAkBC,cAAAA,OAAO,EAAE;AAAEC,gBAAAA,GAAG,EAAE;AAAEH,kBAAAA,GAAG,EAAEH,GAAG,CAACG;AAAX;AAAP;AAA3B,aAAD,CAAf;AAEbtB,YAAAA,QAAQ,CAACL,UAAU,CAACO,KAAD,EAAQL,GAAG,CAACoB,GAAZ,CAAX,kCACDf,KADC;AACMwB,cAAAA,IAAI,EAAE,IADZ;AACkBC,cAAAA,aAAa,EAAE,IAAIC,IAAJ,GAAWC,WAAX;AADjC,gBAEL,OAFK,CAAR;AAIA,mBAAO7B,QAAQ,CAAC;AAAEuB,cAAAA,IAAI,EAAE,QAAR;AAAkBC,cAAAA,OAAO,EAAE;AAAEC,gBAAAA,GAAG,EAAE;AAAEK,kBAAAA,OAAO,EAAEX,GAAG,CAACM;AAAf;AAAP;AAA3B,aAAD,CAAf;AACH,WAVL;AAYAM,UAAAA,KAAK,CAAC,8BAA8Bf,OAAO,CAACgB,KAAR,CAAcC,IAAd,CAAmBC,UAAlD,CAAL;AACH,SAfM,CAAP;AAgBH;AA7BU,KAAf,EA8BGC,MA9BH,CA8BUrC,SAAS,CAACsC,OA9BpB;AAgCH,GAjCQ,EAiCN,EAjCM,CAAT;AAkCA,sBACI;AAAK,IAAA,GAAG,EAAEtC;AAAV;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH;;AAED,eAAeF,SAAf","sourcesContent":["import React, { useContext, useEffect, useRef } from 'react';\nimport { DataContext } from '../../../store/GlobalState';\nimport { patchData } from '../../../utils/fetchData';\nimport { updateItem } from '../../../store/Actions';\n\nfunction PayButton({ odr }) {\n    const refPayBtn = useRef()\n    const { state, dispatch } = useContext(DataContext)\n    const { auth, order } = state\n    useEffect(() => {\n        paypal.Buttons({\n            createOrder: function (data, actions) {\n                // This function sets up the details of the transaction, including the amount and line item details.\n                return actions.order.create({\n                    purchase_units: [{\n                        amount: {\n                            value: odr.total\n                        }\n                    }]\n                });\n            },\n            onApprove: function (data, actions) {\n                // This function captures the funds from the transaction.\n                return actions.order.capture().then(function (details) {\n                    // This function shows a transaction success message to your buyer.\n                    patchData(`order/${odr._id}`, null, auth.access_token)\n                        .then(res => {\n                            console.log(res);\n                            if (res.err) return dispatch({ type: \"NOTIFY\", payload: { msg: { err: res.err } } })\n\n                            dispatch(updateItem(order, odr._id), {\n                                ...order, paid: true, dateOfPayment: new Date().toISOString()\n                            }, \"ORDER\")\n\n                            return dispatch({ type: \"NOTIFY\", payload: { msg: { success: res.msg } } })\n                        })\n\n                    alert('Transaction completed by ' + details.payer.name.given_name);\n                });\n            }\n        }).render(refPayBtn.current);\n\n    }, []);\n    return (\n        <div ref={refPayBtn} ></div>\n    );\n}\n\nexport default PayButton;"]},"metadata":{},"sourceType":"module"}